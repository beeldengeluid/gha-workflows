# .github/workflows/maven-release.yml

name: Maven Release

on:
  workflow_call:

jobs:
  maven-release:
    # Only run if the commit message does not contain '[maven-release-plugin]',  commit is made by mvn.
    if: "!contains(github.event.head_commit.message, '[maven-release-plugin]')"
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@928458dc63c29045d18a90cead4b79dcd0a6e98b #v4.2.2

      - name: AWS Credentials
        uses:  aws-actions/configure-aws-credentials@f171d5c895855a39c1ef93ab625499424407e172 #v4.0.2
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::917951871879:role/GitHubActionsBgOrg

      - name: Set up JDK
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b #v4
        with:
          distribution: 'temurin'
          java-version-file: '.java-version'
          overwrite-settings: 'false'
          cache: 'maven'
          cache-dependency-path: 'pom.xml'

      - name: Set up Git credentials
        run: |
          git config --global user.name ${{ github.actor }}
          git config --global user.email "github-actions@beeldengeluid.nl"
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}".insteadOf "git@github.com:${{ github.repository }}.git"
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git fetch --tags --prune

      - name: Maven Release Prepare
        run: |
          set -o pipefail
          mvn release:prepare --batch-mode -fae || { echo "Maven Release Prepare failed."; exit 1; }

      - name: Maven Release Perform
        id: release-output
        run: |
          set -o pipefail
          trap 'echo "Error occurred. Rolling back..."; mvn release:rollback --batch-mode  ERR
          mvn release:perform --batch-mode -fae

      - name: Find all folders with Dockerfile
        run: |
          folders=$(find ./target/checkout -type f -name 'Dockerfile' -exec dirname {} \;)
          [ -z "$folders" ] && echo "No Dockerfiles found. Docker build will skip" && exit 0
          echo FOLDERS=$folders >> $GITHUB_ENV

      - name: ECR Login
        if: ${{ env.FOLDERS }}
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 #v2.0.1

      - name: Build and push Docker images
        if: ${{ env.FOLDERS }}
        run: |
          for dir in ${{ env.FOLDERS }}; do
            echo "Building Docker image in directory: $dir"
            IMAGE_TAG=$(basename $(find $dir/target -type f -name '*.war') .war )-$(echo ${{ github.sha }} | cut -c1-7)
            ECR_IMAGE_REPOSITORY=917951871879.dkr.ecr.eu-west-1.amazonaws.com/${{ github.event.repository.name }}

            docker build -t $ECR_IMAGE_REPOSITORY:$IMAGE_TAG $dir
            docker push $ECR_IMAGE_REPOSITORY:$IMAGE_TAG
          done

      - name: Post Clear of git URL Replacements
        if: always()
        run: |
          for entry in $(git config --global --get-regexp 'url.*.insteadOf' | awk '{print $1}'); do
            echo "removing $entry"
            git config --global --unset-all "$entry"
          done


