name: Maven Deploy


# A build where the docker image is created by the 'fabric8' maven plugin
#

on:
  workflow_call:

jobs:
  maven-deploy:
    runs-on: ubuntu-24.04
    env:
      TZ:  'Europe/Amsterdam'
      MAVEN_ARGS: '--no-transfer-progress'
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::917951871879:role/GitHubActionsBgOrg
      - name: Get CodeArtifact Authorization Token
        run: |
          codeartifact_auth_token=$(aws codeartifact  get-authorization-token --domain nisv-ateam --domain-owner 917951871879 --region eu-west-1 --query authorizationToken --output text)
          echo "::add-mask::$codeartifact_auth_token"
          echo "CODEARTIFACT_AUTH_TOKEN=$codeartifact_auth_token" >> "$GITHUB_ENV"

      - name: Set up JDK
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: 'temurin'
          java-version-file: '.java-version'
          cache: 'maven'
      - name: Set Maven settings.xml # This seems, odd, setup-java can do this
        run: echo "${{ vars.MAVEN_CODE_ARTIFACT_SETTINGS }}" | base64 --decode > ~/.m2/settings.xml
      - name: Maven install
        run: |
          mvn -B -U clean install -fae
          docker image ls


