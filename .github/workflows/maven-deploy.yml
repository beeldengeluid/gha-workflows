# .github/workflows/maven-deploy.yml

name: Maven Deploy

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        default: '17'
        type: string

jobs:
  maven-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::917951871879:role/GitHubActionsBgOrg

      - name: Get CodeArtifact Authorization Token
        run: |
          codeartifact_auth_token=$(aws codeartifact  get-authorization-token --domain nisv-ateam --domain-owner 917951871879 --region eu-west-1 --query authorizationToken --output text)
          echo "::add-mask::$codeartifact_auth_token"
          echo "CODEARTIFACT_AUTH_TOKEN=$codeartifact_auth_token" >> "$GITHUB_ENV"
          echo "CODEARTIFACT_USERNAME=aws" >> "$GITHUB_ENV"

      - name: Set up JDK
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java-version }}

      - name: Set Maven settings.xml
        run: echo "${{ secrets.MAVEN_CODE_ARTIFACT_SETTINGS }}" | base64 --decode > ~/.m2/settings.xml

      - name: Cache Maven packages
        uses: actions/cache@v4.1.2
        with:
          path: ~/.m2/repository
          key: "${{ runner.os }}-mvn-${{ hashFiles('**/pom.xml') }}"
          restore-keys: |
            ${{ runner.os }}-mvn-

      - name: Maven Deploy
        run: |
          set -o pipefail
          if [[ ${{ github.ref }} == refs/tags/* ]]; then
            mvn clean deploy -U -DaltDeploymentRepository=code-artifact::default::https://nisv-ateam-917951871879.d.codeartifact.eu-west-1.amazonaws.com/maven/releases/ 
          else
            mvn clean deploy 
          fi

      - name: Find all folders with Dockerfile
        run: |
          folders=$(find . -type f -name 'Dockerfile' -exec dirname {} \;)
          [ -z "$folders" ] && echo "No Dockerfiles found. Docker build will skip." && exit 0
          echo FOLDERS=$folders >> $GITHUB_ENV

      - name: ECR Login
        if: ${{ env.FOLDERS }}
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Build and push Docker images
        if: ${{ env.FOLDERS }}
        run: |
          for dir in ${{ env.FOLDERS }}; do
            echo "Building Docker image in directory: $dir"
            IMAGE_TAG=$(basename $(find $dir/target -type f -name '*.war') .war )-$(echo ${{ github.sha }} | cut -c1-7)
            ECR_IMAGE_REPOSITORY=917951871879.dkr.ecr.eu-west-1.amazonaws.com/${{ github.event.repository.name }}
          
            docker build -t $ECR_IMAGE_REPOSITORY:$IMAGE_TAG $dir
            docker push $ECR_IMAGE_REPOSITORY:$IMAGE_TAG
          done
          
